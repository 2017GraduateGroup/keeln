<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.keeln.mapper.ScenicRegionMapper">

    <resultMap id="BaseResultMap" type="com.keeln.domain.model.ScenicRegionDO">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="grade" jdbcType="VARCHAR" property="grade" />
        <result column="price_min" jdbcType="VARCHAR" property="priceMin" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="url" jdbcType="VARCHAR" property="url" />
        <result column="area" jdbcType="INTEGER" property="area" />
        <result column="hot_flag" jdbcType="INTEGER" property="hotFlag" />
        <result column="imgurl" jdbcType="VARCHAR" property="imgurl" />
        <result column="detail" jdbcType="VARCHAR" property="detail" />
    </resultMap>

    <sql id="Query_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${criterion.condition}
                            <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                #{listItem}
                            </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Query_Where_Clause">
        <where>
            <foreach collection="query.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id,gmt_create,gmt_modified,title,grade,price_min,address,url,area,hot_flag,imgurl,detail
    </sql>

    <select id="selectByQuery" parameterType="com.keeln.domain.query.ScenicRegionQuery" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
            from scenic_region
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="MysqlDialectSuffix" />
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from scenic_region where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from scenic_region where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByQuery" parameterType="com.keeln.domain.query.ScenicRegionQuery">
        delete from scenic_region
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
    </delete>

    <insert id="insertSelective" parameterType="com.keeln.domain.model.ScenicRegionDO">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into scenic_region
        <trim prefix="(" suffix=")" suffixOverrides=",">
            gmt_create,gmt_modified,
            <if test="title != null">
                title,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="priceMin != null">
                price_min,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="hotFlag != null">
                hot_flag,
            </if>
            <if test="imgurl != null">
                imgurl,
            </if>
            <if test="detail != null">
                detail,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            now(),now(),
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="grade != null">
                #{grade,jdbcType=VARCHAR},
            </if>
            <if test="priceMin != null">
                #{priceMin,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                #{area,jdbcType=INTEGER},
            </if>
            <if test="hotFlag != null">
                #{hotFlag,jdbcType=INTEGER},
            </if>
            <if test="imgurl != null">
                #{imgurl,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                #{detail,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByQuery" parameterType="com.keeln.domain.query.ScenicRegionQuery" resultType="java.lang.Integer">
        select count(*) from scenic_region
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
    </select>

    <update id="updateByQuerySelective" parameterType="map">
        update scenic_region
        <set>
            gmt_modified=now(),
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.grade != null">
                grade = #{record.grade,jdbcType=VARCHAR},
            </if>
            <if test="record.priceMin != null">
                price_min = #{record.priceMin,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.url != null">
                url = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.area != null">
                area = #{record.area,jdbcType=INTEGER},
            </if>
            <if test="record.hotFlag != null">
                hot_flag = #{record.hotFlag,jdbcType=INTEGER},
            </if>
            <if test="record.imgurl != null">
                imgurl = #{record.imgurl,jdbcType=VARCHAR},
            </if>
            <if test="record.detail != null">
                detail = #{record.detail,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause" />
        </if>
    </update>

    <update id="updateByQuery" parameterType="map">
        update scenic_region set
        title = #{record.title,jdbcType=VARCHAR},
        grade = #{record.grade,jdbcType=VARCHAR},
        price_min = #{record.priceMin,jdbcType=VARCHAR},
        address = #{record.address,jdbcType=VARCHAR},
        url = #{record.url,jdbcType=VARCHAR},
        area = #{record.area,jdbcType=INTEGER},
        hot_flag = #{record.hotFlag,jdbcType=INTEGER},
        imgurl = #{record.imgurl,jdbcType=VARCHAR},
        detail = #{record.detail,jdbcType=VARCHAR},
        gmt_modified = now()
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.keeln.domain.model.ScenicRegionDO">
        update scenic_region
        <set>
            gmt_modified=now(),
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="grade != null">
                grade = #{grade,jdbcType=VARCHAR},
            </if>
            <if test="priceMin != null">
                price_min = #{priceMin,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=INTEGER},
            </if>
            <if test="hotFlag != null">
                hot_flag = #{hotFlag,jdbcType=INTEGER},
            </if>
            <if test="imgurl != null">
                imgurl = #{imgurl,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                detail = #{detail,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <sql id="MysqlDialectSuffix">
        <if test="pageOffset &gt;= 0 and pageSize &gt; 0">
            <![CDATA[ LIMIT #{pageOffset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER} ]]>
        </if>
    </sql>

</mapper>
